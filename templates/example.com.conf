# Configuration for TEI Publisher with virtual host and SSL

# change name of upstream server below to something unique
upstream docker-{{domain}} {
  server publisher:8080 fail_timeout=0;
}

server {
  listen 80;
  listen [::]:80;

  server_name {{domain}};
  server_tokens off;

  # Required by letsencrypt certbot to acquire certificate
  location /.well-known/acme-challenge/ {
      root /var/www/certbot;
  }

  location / {
    return 301 https://{{domain}}$request_uri;
  }
}

{% if ssl %}
# Comment in the following section after acquiring an SSL certificate and make the required changes as
# indicated below

server {
  listen 443 ssl;
  listen [::]:443 ssl;

  server_name {{domain}};

  ssl_certificate /etc/nginx/ssl/live/{{domain}}/fullchain.pem;
  ssl_certificate_key /etc/nginx/ssl/live/{{domain}}/privkey.pem;

  location / {
    # change upstream server placeholder 'docker-{{domain}}' below to what you configured above for upstream
    proxy_pass http://docker-{{domain}}/exist/apps/{{application.abbrev}}$request_uri;
    proxy_redirect http://$host/exist/apps/{{application.abbrev}}/ /;
    proxy_set_header   Host $host;
    proxy_set_header   X-Real-IP $remote_addr;
    proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header   X-Forwarded-Host $server_name;
    proxy_ssl_server_name on;
    proxy_cookie_path /exist /;
    client_max_body_size  512m;
  }

  location /apps/eXide {
    # change upstream server placeholder 'docker-{{domain}}' below to what you configured above for upstream
    proxy_pass http://docker-{{domain}}/exist$request_uri;
    proxy_redirect     off;
    proxy_set_header   Host $host;
    proxy_set_header   X-Real-IP $remote_addr;
    proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header   X-Forwarded-Host $server_name;
    proxy_ssl_server_name on;
    proxy_cookie_path /exist /;
    client_max_body_size  512m;
  }
}
{% endif %}